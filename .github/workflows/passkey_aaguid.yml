name: Daily Download and Process Passkey AAGUIDs

# 设置所需权限，允许写入仓库内容
permissions:
  contents: write

on:
  schedule:
    - cron: '0 1 * * *' # 每天 UTC 时间 01:00 执行
  workflow_dispatch: # 允许手动触发

jobs:
  fetch-passkey-aaguid:
    runs-on: ubuntu-latest

    steps:
      # 检出仓库代码
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          persist-credentials: true # 确保使用 GITHUB_TOKEN 进行身份验证

      # 设置 Python 环境
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x' # 使用最新的 Python 3 版本

      # 安装必要的 Python 包
      - name: Install Python packages
        run: |
          python -m pip install --upgrade pip
          pip install requests

      # 获取并处理 Passkey AAGUIDs
      - name: Fetch and Process Passkey AAGUIDs
        id: process_passkey_aaguid
        run: |
          python <<EOF
          import os
          import requests
          import json
          import re

          # 远程 aaguid.json 文件的 URL
          url = "https://raw.githubusercontent.com/passkeydeveloper/passkey-authenticator-aaguids/main/aaguid.json"

          # 下载 JSON 数据
          response = requests.get(url)
          if response.status_code != 200:
              raise Exception(f"Failed to download aaguid.json: {response.status_code}")

          aaguid_data = response.json()

          # 总条目数
          total_entries = len(aaguid_data)
          print(f"Total entries in aaguid.json: {total_entries}")

          # 定义匹配模式
          pattern = re.compile(r'\bpasskey\b', re.IGNORECASE)

          # 提取包含 'passkey' 的 AAGUID
          passkey_aaguid_list = []
          for aaguid, details in aaguid_data.items():
              name = details.get("name", "").strip()
              print(f"Processing AAGUID: {aaguid}, Name: '{name}'")
              if pattern.search(name):
                  passkey_aaguid_list.append({
                      "name": name,
                      "aaguid": aaguid
                  })
                  print(f"Matched: {name}")
              else:
                  print(f"Not matched: {name}")

          # 提取的条目数
          extracted_entries = len(passkey_aaguid_list)
          print(f"Extracted passkey AAGUID entries: {extracted_entries}")

          # 将结果写入 passkey_aaguid.json
          with open('passkey_aaguid.json', 'w') as outfile:
              json.dump(passkey_aaguid_list, outfile, indent=2)

          # 设置提交消息
          commit_msg = f"Updated passkey_aaguid.json with {extracted_entries} entries."
          with open(os.environ['GITHUB_OUTPUT'], 'a') as f:
              f.write(f"commit_msg={commit_msg}\n")
          EOF

      # 提交并推送更改
      - name: Commit and Push Changes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

          # 添加生成的文件
          git add passkey_aaguid.json

          # 提交更改，如果没有更改则跳过
          git commit -m "bot: ${{ steps.process_passkey_aaguid.outputs.commit_msg }}" -a || echo "No changes to commit"

          # 使用 GITHUB_TOKEN 进行身份验证
          git remote set-url origin https://x-access-token:${GITHUB_TOKEN}@github.com/${{ github.repository }}.git

          # 推送到当前分支
          git push 
